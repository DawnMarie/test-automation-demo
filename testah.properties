# =================================================================================================
# Testah Properties - version: 3.0.0 - File Created: 01/20/2022 14:10:12.907
# No values are required. Leaving a key empty will not use the value, turning the property off.
# =================================================================================================

param_userDir = C:\\Users\\dunnd\\IdeaProjects\\test-automation-demo
# Base Url For Jira ex: http://company.jira.com
param_jiraUrl = 
# Inject Jira Remote Link for Associated Items
param_useJiraRemoteLink = false
# UserName for access to jira, will be added to mask
param_jiraUserName = 
# Pwd for access to jira, will be added to mask, should be supplied via job or system
param_jiraPassword = 
# UserName for access to email, will be added to mask
param_emailUserName = 
# Pwd for access to email, will be added to mask, should be supplied via job or system
param_emailPassword = 
# Domain for access to email, will be added to mask, should be supplied via job or system
param_emailDomain = 
# If No TS.asserts were found, so status is null, show tests as ignored
param_resultIgnoredIfNoAssertsFound = true
# Url base to where the class can be read, can point to source control, or testcase mgmt system
param_sourceUrl = 
# Number of Concurrent Threads
param_numConcurrentThreads = 1
# Default to truncate request response in report and logging, to turn off set to 0
param_defaultResponseTruncate = 500
# Browser value allowed: values: [FIREFOX_GECKO, FIREFOX, CHROME, IE, PHANTOMJS]
param_browser = CHROME
# envir values allowed: 
param_envir = dev
# Log level for log4j: TRACE, DEBUG, INFO, WARN, ERROR
param_level = DEBUG
# Default Wait time, determines the length of the loop, is not in seconds, works with the default pause time
param_defaultWaitTime = 10
# Default Time to Pause when Called, value is in milliseconds.
param_defaultPauseTime = 500
# Provide a value for the base level where tests can be found in the project, if empty will not run tests in jar
param_lookAtInternalTests = org.testah
# Provide a path where to look for external uncompiled Test Classes, can be stored as .java or .groovy, can supply a directory or specific file
param_lookAtExternalTests = 
# Should System keep track of all actions occurring during test run
param_recordSteps = true
# Should the System work as normal JUnit and stop a test case method on first fail, if false will continue to end then check for any fails
param_throwExceptionOnFail = true
# timezone to use for runtime data, if empty will use system default. If supplied should be string representation of timezone like America/New_York
param_timezone = America/New_York
# timeFormat to use for runtime data, if empty will use default. If supplied should be string representation of timezone like yyyy-MM-dd'T'HH:mm:ss.SSZ
param_timeFormat = yyyy-MM-dd'T'HH:mm:ss.SSZ


# =========================================
# Webdriver properties
# =========================================

# Override Browser UserAgent property, allows tests to act as mobile device, etc
param_webDriverUserAgentValue = 
# Use A Remote Driver to run the Browser with, allows for Grid use
param_webDriverUseRemoteDriver = false
# If Use Remote Driver is True, value will be used to connect to a Webdriver Grid, can be local or remote
param_webDriverDefaultRemoteUri = http://localhost:4444/wd/hub
# Add path to the Firefox Binary (only needed if in a non default location
param_webDriverFirefoxDriverBinary = 
# Add a path to the Phantomjs Driver Binary, required if using phatomjs, system will try to pull it locally if not found
param_webDriverPhantomJsDriverBinary = 
# Add a path to the Chrome Driver Binary, required if using phatomjs, system will try to pull it locally if not found
param_webDriverChromeDriverBinary = 
# Default window Width to open browser window to. If empty then browser will be maximized
param_windowWidth = 1366
# Default window Height to open browser window to. If empty then browser will be maximized
param_windowHeight = 1000
# Should rest response get written to file and linked into the html report which normally truncates the responses.
param_writeResponseToFile = false


# =========================================
# Reporting Properties
# =========================================

# Folder to write output to, if empty will be {user dir}/testahOutput
param_output = 
# If set to true output from asserts will be sanitized using the masking map.
param_isMaskOutput = true
# Should the Runner create a xml result file
param_useXunitFormatter = true
# Should the Runner create a json result file
param_useJsonFormatter = true
# Should the Runner create a html result file
param_useHtmlFormatter = true
# Html Template the Runner should use
param_reportHtmlTemplate = org/testah/templates/htmlReportV2.vm
# Should the Runner create a meta text file
param_useMetaFormatter = true
# Should the Runner create a summary json file
param_useSummaryJsonReport = true
# Should the Runner automatically open the Html Report in a browser
param_autoOpenHtmlReport = true
# Should the reports use unique names.  If the test report runner is used, it is on by default, else is false and will cause reports to get overridden each run.
param_uniqueReportName = false
# Should the Runner Post info to a service in Json Format. If Uri is supplied it will attempt to send the json info as a List of 1 to many TestPlans
param_sendJsonTestDataToService = 
# True will send a flag saying to ignore the results.
param_addResults = true
# True will send a flag saying to update the repository with metadata.
param_updateMetadata = true


# =========================================
# Run Info Properties
# =========================================

# Version Id is a value that can be used to tell what version the test is testing against. Can be passed runtime via -Dtestah.versionId=login-0.0.2
param_runInfoVersionId = 
# Build Number is a value that can be used to tell what build the test is testing against. Can be passed runtime via -Dtestah.buildNumber=login-0.0.2
param_runInfoBuildNumber = 
# Run Id is a value that can be used to group many different results together. Can be passed runtime via -Dtestah.runId=run23
param_runInfoRunId = 
# Run Location is a way to tell where the test ran, can be local machine name, or Jenkins Job Url. Can be passed runtime via -Dtestah.runLocation=local
param_runLocation = localhost
# Run Type is a way to tell what type of run the test execution was involved in, smoke, regression, other. Can be passed runtime via -Dtestah.runType=smoke
param_runType = 


# =========================================
# Filter Properties
# =========================================

# Filter Schema To Use. Leave empty to not apply filters, to use default filter, set value to DEFAULT.  You can also create your own, like REG, or SMOKE
param_usefilterSchema = DEFAULT
# Filter using the Platform metadata field. Can be a comma separated list of values that a test must match. Value can use the (~) for [Must Not Have], any match will be excluded.
filter_DEFAULT_filterByPlatform = 
# Filter using the Device metadata field. Can be a comma separated list of values that a test must match. Value can use the (~) for [Must Not Have], any match will be excluded.
filter_DEFAULT_filterByDevice = 
# Filter using the Component metadata field. Can be a comma separated list of values that a test must match. Value can use the (~) for [Must Not Have], any match will be excluded.
filter_DEFAULT_filterByComponent = 
# Filter using the RunType metadata field. Can be a comma separated list of values that a test must match. Value can use the (~) for [Must Not Have], any match will be excluded.
filter_DEFAULT_filterByRunType = 
# Filter Using The @KnownProblem Annotation.  True means testplan/testcase must not be a known problem. False means must be a known problem. Empty means do not use filter.
filter_DEFAULT_filterIgnoreKnownProblem = 
# Filter using the Tag metadata field. Can be a comma separated list of values that a test must match. Value can use the (~) for [Must Not Have], any match will be excluded.
filter_DEFAULT_filterByTag = 
# Filter by TestPlan Name, TestPlan must start with prefix. Can supply a comma separated list.
filter_DEFAULT_filterByTestPlanNameStartsWith = 
# Filter by TestPlan Id, TestPlan must match supplied Uuid. Can supply a comma separated list.
filter_DEFAULT_filterById = 
# Filter by TestType.  Can supply a comma separated List.values: [RETIRE, MANUAL, PENDING, AUTOMATED, DEFAULT]
filter_DEFAULT_filterByTestType = AUTOMATED
param_other = {}
